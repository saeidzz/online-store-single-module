/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.4).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ir.rabbit.group.onlinestore.controller;

import io.swagger.annotations.*;
import ir.rabbit.group.onlinestore.dto.shopping.Order;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-04-26T13:31:08.886Z")

@Api(value = "order", description = "the order API")
public interface OrderApi {

    @ApiOperation(value = "createOrder", nickname = "createOrderByShoppingCartId", notes = "multiple shopping cartId", response = Order.class, tags = {"order",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Order.class),
            @ApiResponse(code = 400, message = "Invalid status value")})
    @RequestMapping(value = "/order/",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<Order> createOrderByShoppingCartId(@NotNull @ApiParam(value = "shoppingCartId", required = true) @Valid @RequestParam(value = "shoppingCartId", required = true) Long shoppingCartId);


    @ApiOperation(value = "Deletes a order", nickname = "deleteOrder", notes = "", tags = {"order",})
    @ApiResponses(value = {
            @ApiResponse(code = 400, message = "Invalid ID supplied"),
            @ApiResponse(code = 404, message = "order not found")})
    @RequestMapping(value = "/order/{orderId}",
            produces = {"application/json"},
            method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteOrder(@ApiParam(value = "Product id to delete", required = true) @PathVariable("orderId") Long orderId);


    @ApiOperation(value = "Find order by ID", nickname = "getOrderById", notes = "Returns a single order", response = Order.class, tags = {"order",})
    @ApiResponses(value = {
            @ApiResponse(code = 200, message = "successful operation", response = Order.class),
            @ApiResponse(code = 400, message = "Invalid ID supplied"),
            @ApiResponse(code = 404, message = "order not found")})
    @RequestMapping(value = "/order/{orderId}",
            produces = {"application/json"},
            method = RequestMethod.GET)
    ResponseEntity<Order> getOrderById(@ApiParam(value = "ID of order to return", required = true) @PathVariable("orderId") Long orderId);

}
